{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/Feedback/Feedback.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.jsx","index.js","components/Feedback/Feedback.module.css","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","FeedbackOptions","options","onLeaveFeedback","list","item","button","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","totalFeedback","positiveValue","value","App","state","event","label","target","textContent","toLowerCase","setState","prevState","countTotalFeedback","Object","keys","reduce","acc","countPositiveFeedbackPercentage","Math","round","Feedback","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d74e61f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__18IsC\"};","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h1 className={styles.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n  children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Feedback.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      <li className={styles.item}>\r\n        <button\r\n          className={styles.button}\r\n          type={options.type}\r\n          onClick={onLeaveFeedback}>\r\n          Good\r\n        </button>\r\n      </li>\r\n      <li className={styles.item}>\r\n        <button\r\n          className={styles.button}\r\n          type={options.type}\r\n          onClick={onLeaveFeedback}>\r\n          Neutral\r\n        </button>\r\n      </li>\r\n      <li className={styles.item}>\r\n        <button\r\n          className={styles.button}\r\n          type={options.type}\r\n          onClick={onLeaveFeedback}>\r\n          Bad\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.defaultProps = {\r\n  message: '',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\n\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const totalFeedback = total();\r\n  const positiveValue = positivePercentage();\r\n\r\n  return (\r\n    <div>\r\n      {!!totalFeedback ? (\r\n        <ul>\r\n          <li className={styles.item}>\r\n            <p>\r\n              Good: <span className={styles.value}>{good}</span>\r\n            </p>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <p>\r\n              Neutral: <span className={styles.value}>{neutral}</span>\r\n            </p>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <p>\r\n              Bad: <span className={styles.value}>{bad}</span>\r\n            </p>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <p>\r\n              Total: <span className={styles.value}>{totalFeedback}</span>\r\n            </p>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <p>\r\n              Positive feedback:{' '}\r\n              <span className={styles.value}>{positiveValue}%</span>\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message={'No feedback given'} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/Feedback/Feedback';\nimport Statistics from './components/Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = event => {\n    const label = event.target.textContent.toLowerCase();\n\n    this.setState(prevState => ({ [label]: (prevState[label] += 1) }));\n  };\n\n  countTotalFeedback = () => {\n    const total = Object.keys(this.state).reduce(\n      (acc, value) => acc + this.state[value],\n      0,\n    );\n\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percent = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n\n    return percent;\n  };\n\n  render() {\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={{ type: 'button' }}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.countTotalFeedback}\n          positivePercentage={this.countPositiveFeedbackPercentage}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__Oq9Kj\",\"item\":\"Feedback_item__3OYmR\",\"button\":\"Feedback_button__yPXC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2F9lF\",\"title\":\"Section_title__161nl\"};"],"sourceRoot":""}